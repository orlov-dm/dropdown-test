/* TODO use postcss to define vars in main.css and import here */
$main-color: rgb(81, 129, 184);
$light-main-color: rgb(119, 165, 218);
$secondary-color: rgb(218, 226, 234);
$light-secondary-color: white;
$border-color: rgb(211, 217, 222);
$background-color: rgb(240, 242, 245);
$text-color: rgb(101, 101, 101);
$hover-text-color: rgb(101, 101, 101);

.dropdown {
    position: relative;
}

.dropdown .input-container {
    min-height: 2em;
    width: 30em;
    border: 1px solid $border-color;
    background-color: $light-secondary-color;
    display: flex;
    flex-wrap: wrap;
}

.dropdown .input-container .info {
    background-color: $main-color;
    color: $light-secondary-color;
    border: 1px solid transparent;
    border-radius: 3px;
    margin: 2px;
    white-space: nowrap;
    display: flex;
    vertical-align: middle;
    line-height: normal;
    padding: 4px;

    line-height: 1.1;
}

.dropdown .input-container .info.add {
    background-color: $secondary-color;
    color: $main-color;
    cursor: pointer;
}

.dropdown .input-container .info .action {
    border: none;
    background: none;
    color: $light-secondary-color;
    padding: 0;
    cursor: pointer;
}

.dropdown .input-container .info > :not(:last-child) {
    margin-right: 0.5em;
}

.dropdown .input-container .info .action svg path {
    fill: $secondary-color;
}

.dropdown .input-container .selected .action:hover svg path {
    fill: $light-secondary-color;
}

.dropdown .input-container .info .action.add svg path {
    fill: $light-main-color;
}

.dropdown .input-container .info .action.add:hover svg path {
    fill: $main-color;
}

.dropdown .input-container .input {
    height: 100%;
    padding: 0.5em;

    border: 0;
    flex-grow: 1;
    width: 100%;
}

.dropdown .data {
    position: absolute;
    /* TODO: Decide how to set offset */
    /* top: 2em; */
    left: 0;
    width: 30em;
    border: 1px solid $border-color;
    border-top: 0;
    max-height: 20em;
    overflow-y: auto;
    z-index: 1000;
    background-color: $background-color;
}

.dropdown .data .row {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 8px 12px;
    background-color: white;

}

.dropdown .data .row:not(:last-child) {
    border-bottom: 1px solid $border-color);
}
.dropdown .data .row.current,
.dropdown .data .row:hover {
    background-color: $background-color);
    color: $hover-text-color);
}

.dropdown .data .row.loading {
    color: $main-color;
    font-weight: bold;
}

.dropdown .data .avatar {
    padding-right: 1em;
}
.dropdown .data .avatar svg {
    width: 30px;
    height: 30px;
    border: 1px solid transparent;
    border-radius: 10em;
    background-color: $background-color;
}

.dropdown .data .user-info {
    flex: 1;

    display: flex;
    flex-direction: column;
}

.dropdown .data .user-info .full-name {
    color: $main-color;
    font-weight: bold;
}
